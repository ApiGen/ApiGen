<?php

/**
 * This file is part of the ApiGen (http://apigen.org)
 *
 * For the full copyright and license information, please view
 * the file license.md that was distributed with this source code.
 */

namespace ApiGen\FileSystem;

use ApiGen\Configuration\Configuration;
use Nette;
use Nette\Utils\Finder;
use Nette\Utils\Strings;
use RuntimeException;
use ZipArchive;


class Zip extends Nette\Object
{

	/**
	 * @var Configuration
	 */
	private $configuration;


	public function __construct(Configuration $configuration)
	{
		$this->configuration = $configuration;
	}


	public function generate()
	{
		if ( ! extension_loaded('zip')) {
			throw new RuntimeException('Extension zip is not loaded');
		}

		$archive = new ZipArchive;
		if ($archive->open($this->getArchivePath(), ZipArchive::CREATE) !== TRUE) {
			throw new RuntimeException('Could not open ZIP archive');
		}

		$options = $this->configuration->getOptions();
		$archive->setArchiveComment(trim(sprintf(
			'%s API documentation generated by ApiGen on %s',
			rtrim($options['title'], ' API'), date('Y-m-d H:i:s')
		)));

		$directory = Strings::webalize(trim(sprintf('%s API documentation', $options['title'])), NULL, FALSE);
		$destinationLength = strlen($options['destination']);
		foreach (Finder::find('*')->in($options['destination']) as $file) {
			if (is_file($file)) {
				$archive->addFile($file, $directory . DS . substr($file, $destinationLength + 1));
			}
		}

		if ($archive->close() === FALSE) {
			throw new RuntimeException('Could not save ZIP archive');
		}
	}


	/**
	 * @return string
	 */
	public function getArchivePath()
	{
		$options = $this->configuration->getOptions();
		$name = trim($options['title'] . ' API documentation');
		return $options['destination'] . DS . Strings::webalize($name) . '.zip';
	}

}
